// Code generated by go-swagger; DO NOT EDIT.

package get_a_visitor

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// NewGetVisitorParams creates a new GetVisitorParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewGetVisitorParams() *GetVisitorParams {
	return &GetVisitorParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewGetVisitorParamsWithTimeout creates a new GetVisitorParams object
// with the ability to set a timeout on a request.
func NewGetVisitorParamsWithTimeout(timeout time.Duration) *GetVisitorParams {
	return &GetVisitorParams{
		timeout: timeout,
	}
}

// NewGetVisitorParamsWithContext creates a new GetVisitorParams object
// with the ability to set a context for a request.
func NewGetVisitorParamsWithContext(ctx context.Context) *GetVisitorParams {
	return &GetVisitorParams{
		Context: ctx,
	}
}

// NewGetVisitorParamsWithHTTPClient creates a new GetVisitorParams object
// with the ability to set a custom HTTPClient for a request.
func NewGetVisitorParamsWithHTTPClient(client *http.Client) *GetVisitorParams {
	return &GetVisitorParams{
		HTTPClient: client,
	}
}

/* GetVisitorParams contains all the parameters to send to the API endpoint
   for the get visitor operation.

   Typically these are written to a http.Request.
*/
type GetVisitorParams struct {

	// Appname.
	AppName *string

	// Bundleid.
	BundleID *string

	// Configid.
	ConfigID *string

	// Deviceid.
	ID *string

	// Osversion.
	OSVersion *string

	// Processname.
	ProcessName *string

	// Sdkversion.
	//
	// Format: uint64
	SDKVersion *uint64

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the get visitor params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetVisitorParams) WithDefaults() *GetVisitorParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the get visitor params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetVisitorParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the get visitor params
func (o *GetVisitorParams) WithTimeout(timeout time.Duration) *GetVisitorParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get visitor params
func (o *GetVisitorParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get visitor params
func (o *GetVisitorParams) WithContext(ctx context.Context) *GetVisitorParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get visitor params
func (o *GetVisitorParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get visitor params
func (o *GetVisitorParams) WithHTTPClient(client *http.Client) *GetVisitorParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get visitor params
func (o *GetVisitorParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithAppName adds the appname to the get visitor params
func (o *GetVisitorParams) WithAppName(appname *string) *GetVisitorParams {
	o.SetAppName(appname)
	return o
}

// SetAppName adds the appname to the get visitor params
func (o *GetVisitorParams) SetAppName(appname *string) {
	o.AppName = appname
}

// WithBundleID adds the bundleid to the get visitor params
func (o *GetVisitorParams) WithBundleID(bundleid *string) *GetVisitorParams {
	o.SetBundleID(bundleid)
	return o
}

// SetBundleID adds the bundleid to the get visitor params
func (o *GetVisitorParams) SetBundleID(bundleid *string) {
	o.BundleID = bundleid
}

// WithConfigID adds the configid to the get visitor params
func (o *GetVisitorParams) WithConfigID(configid *string) *GetVisitorParams {
	o.SetConfigID(configid)
	return o
}

// SetConfigID adds the configid to the get visitor params
func (o *GetVisitorParams) SetConfigID(configid *string) {
	o.ConfigID = configid
}

// WithID adds the deviceid to the get visitor params
func (o *GetVisitorParams) WithID(deviceid *string) *GetVisitorParams {
	o.SetID(deviceid)
	return o
}

// SetID adds the deviceid to the get visitor params
func (o *GetVisitorParams) SetID(deviceid *string) {
	o.ID = deviceid
}

// WithOSVersion adds the osversion to the get visitor params
func (o *GetVisitorParams) WithOSVersion(osversion *string) *GetVisitorParams {
	o.SetOSVersion(osversion)
	return o
}

// SetOSVersion adds the osversion to the get visitor params
func (o *GetVisitorParams) SetOSVersion(osversion *string) {
	o.OSVersion = osversion
}

// WithProcessName adds the processname to the get visitor params
func (o *GetVisitorParams) WithProcessName(processname *string) *GetVisitorParams {
	o.SetProcessName(processname)
	return o
}

// SetProcessName adds the processname to the get visitor params
func (o *GetVisitorParams) SetProcessName(processname *string) {
	o.ProcessName = processname
}

// WithSDKVersion adds the sdkversion to the get visitor params
func (o *GetVisitorParams) WithSDKVersion(sdkversion *uint64) *GetVisitorParams {
	o.SetSDKVersion(sdkversion)
	return o
}

// SetSDKVersion adds the sdkversion to the get visitor params
func (o *GetVisitorParams) SetSDKVersion(sdkversion *uint64) {
	o.SDKVersion = sdkversion
}

// WriteToRequest writes these params to a swagger request
func (o *GetVisitorParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.AppName != nil {

		// query param appname
		var qrAppname string

		if o.AppName != nil {
			qrAppname = *o.AppName
		}
		qAppname := qrAppname
		if qAppname != "" {

			if err := r.SetQueryParam("appname", qAppname); err != nil {
				return err
			}
		}
	}

	if o.BundleID != nil {

		// query param bundleid
		var qrBundleid string

		if o.BundleID != nil {
			qrBundleid = *o.BundleID
		}
		qBundleid := qrBundleid
		if qBundleid != "" {

			if err := r.SetQueryParam("bundleid", qBundleid); err != nil {
				return err
			}
		}
	}

	if o.ConfigID != nil {

		// query param configid
		var qrConfigid string

		if o.ConfigID != nil {
			qrConfigid = *o.ConfigID
		}
		qConfigid := qrConfigid
		if qConfigid != "" {

			if err := r.SetQueryParam("configid", qConfigid); err != nil {
				return err
			}
		}
	}

	if o.ID != nil {

		// query param deviceid
		var qrDeviceid string

		if o.ID != nil {
			qrDeviceid = *o.ID
		}
		qDeviceid := qrDeviceid
		if qDeviceid != "" {

			if err := r.SetQueryParam("deviceid", qDeviceid); err != nil {
				return err
			}
		}
	}

	if o.OSVersion != nil {

		// query param osversion
		var qrOsversion string

		if o.OSVersion != nil {
			qrOsversion = *o.OSVersion
		}
		qOsversion := qrOsversion
		if qOsversion != "" {

			if err := r.SetQueryParam("osversion", qOsversion); err != nil {
				return err
			}
		}
	}

	if o.ProcessName != nil {

		// query param processname
		var qrProcessname string

		if o.ProcessName != nil {
			qrProcessname = *o.ProcessName
		}
		qProcessname := qrProcessname
		if qProcessname != "" {

			if err := r.SetQueryParam("processname", qProcessname); err != nil {
				return err
			}
		}
	}

	if o.SDKVersion != nil {

		// query param sdkversion
		var qrSdkversion uint64

		if o.SDKVersion != nil {
			qrSdkversion = *o.SDKVersion
		}
		qSdkversion := swag.FormatUint64(qrSdkversion)
		if qSdkversion != "" {

			if err := r.SetQueryParam("sdkversion", qSdkversion); err != nil {
				return err
			}
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
