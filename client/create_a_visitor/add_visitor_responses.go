// Code generated by go-swagger; DO NOT EDIT.

package create_a_visitor

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"

	"visitor-registry/models"
)

// AddVisitorReader is a Reader for the AddVisitor structure.
type AddVisitorReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *AddVisitorReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewAddVisitorOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 500:
		result := NewAddVisitorInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewAddVisitorOK creates a AddVisitorOK with default headers values
func NewAddVisitorOK() *AddVisitorOK {
	return &AddVisitorOK{}
}

/* AddVisitorOK describes a response with status code 200, with default header values.

ID returned after registring a visitor
*/
type AddVisitorOK struct {

	/* The id of the visitor

	   Format: int64
	*/
	ID int64
}

func (o *AddVisitorOK) Error() string {
	return fmt.Sprintf("[POST /visitor][%d] addVisitorOK ", 200)
}

func (o *AddVisitorOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header id
	hdrID := response.GetHeader("id")

	if hdrID != "" {
		valid, err := swag.ConvertInt64(hdrID)
		if err != nil {
			return errors.InvalidType("id", "header", "int64", hdrID)
		}
		o.ID = valid
	}

	return nil
}

// NewAddVisitorInternalServerError creates a AddVisitorInternalServerError with default headers values
func NewAddVisitorInternalServerError() *AddVisitorInternalServerError {
	return &AddVisitorInternalServerError{}
}

/* AddVisitorInternalServerError describes a response with status code 500, with default header values.

Generic error message returned as a string
*/
type AddVisitorInternalServerError struct {
	Payload *models.GenericError
}

func (o *AddVisitorInternalServerError) Error() string {
	return fmt.Sprintf("[POST /visitor][%d] addVisitorInternalServerError  %+v", 500, o.Payload)
}
func (o *AddVisitorInternalServerError) GetPayload() *models.GenericError {
	return o.Payload
}

func (o *AddVisitorInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GenericError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
